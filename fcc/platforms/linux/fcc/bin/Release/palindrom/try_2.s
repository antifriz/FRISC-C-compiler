		`ORG 400
		SUB SP,4,SP
		CALL main
		ADD SP,4,SP
		RET
ModuloSigned	PUSH R0
			PUSH R1
			PUSH R2
			PUSH R3
			PUSH R4 ;boolean za predznak
			MOVE 0, R4
			LOAD R1, (SP+1C) ;ucitaj veci ili prvi
			LOAD R2, (SP+18) ;ucitaj manji ili drugi
			MOVE 0, R0 ;rezultat se sprema u R0
			MOVE 1, R3 ;na neki nacin kompas
			CMP R2, 0
			JP_EQ MODUSG7 ;ne smijes djeliti sa nulom
			JP_SGT MODUSG1
			ADD R4, 1, R4 ;zbroji sa 1 ako je negativno 
			SUB R0, R2, R2
MODUSG1			CMP R1, 0 	   ;ako je pozitivan idi MODUSG3 xd
			JP_SGT MODUSG2
			ADD R4, 1, R4 ;zbroji sa 1 ako je negativno
			SUB R0, R1, R1

MODUSG2			CMP R2, R1
			JP_SGT MODUSG3
			SHL R2, 1, R2
			SHL R3, 1, R3
			JP MODUSG2
MODUSG3		CMP R1, R2	   ;zelimo da R1>R2
			JP_SLT MODUSG4 ;ako nije 
			SUB R1,R2,R1
			ADD R0,R3,R0
MODUSG4		SHR R3,1,R3
			JP_C MODUSG5
			SHR R2,1,R2
			JP MODUSG3
MODUSG5			CMP R4,0
			JP_EQ MODUSG6
			MOVE 0, R3
			SUB R3,R1,R1 ;baci minus na rezultat
MODUSG6		STORE R1,(SP+1C)
			POP R4
			POP R3
			POP R2
			POP R1
			POP R0
			RET
MODUSG7		HALT
main  
		PUSH R0
		PUSH R1
		PUSH R2
		PUSH R3
		PUSH R4
		SUB SP, 000000024, SP
		MOVE 000000000, R0
		STORE R0, ( SP + 000000000 )
		JR D1149
D1148  
		LOAD R0, ( i )
		STORE R0, ( SP + 000000020 )
		LOAD R0, ( SP + 000000020 )
		ADD R0, 000000001, R1
		STORE R1, ( SP + 000000000 )
		JR D1146
D1145  
		LOAD R0, ( i )
		STORE R0, ( SP + 00000001C )
		LOAD R0, ( SP + 00000001C )
		LOAD R1, ( SP + 000000000 )
		ADD R0, R1, R2
		STORE R2, ( SP-4 )
		STORE R2, ( SP + 000000018 )
		MOVE 000000017, R0
		STORE R0, ( SP-8 )
		SUB SP, 8, SP
		CALL ModuloSigned
		ADD SP, 4, SP
		POP R0
		MOVE 00000006E, R2
		LOAD R3, ( buffer )
		ADD R3, R0, R4
		STORE R0, ( SP + 000000014 )
		STOREB R2, ( R4 )
		ADD R1, 000000001, R1
		STORE R1, ( SP + 000000000 )
D1146  
		LOAD R0, ( SP + 000000000 )
		CMP R0, 000000015
		JR_SLE D1145
		JR_SGT D1147
D1147  
		LOAD R0, ( i )
		STORE R0, ( SP + 000000010 )
		LOAD R0, ( SP + 000000010 )
		ADD R0, 000000001, R1
		STORE R1, ( i )
		STORE R1, ( SP + 00000000C )
D1149  
		LOAD R0, ( i )
		STORE R0, ( SP + 000000008 )
		LOAD R0, ( SP + 000000008 )
		CMP R0, 000000015
		JR_SLE D1148
		JR_SGT D1150
D1150  
		MOVE 000000000, R0
		STORE R0, ( SP + 000000004 )
		LOAD R0, ( SP + 000000004 )
		STORE R0, ( SP + 000000034 )
		ADD SP, 000000024, SP
		POP R4
		POP R3
		POP R2
		POP R1
		POP R0
		RET 
buffer DW temp_4
temp_4 DB 000000073, 000000074, 000000069, 000000070
		DB 000000065, 000000000, 000000000, 000000000
		DB 000000000, 000000000, 000000000, 000000000
		DB 000000000, 000000000, 000000000, 000000000
		DB 000000000, 000000000, 000000000, 000000000
		DB 000000000, 000000000, 000000000, 000000000
i DW 000000000
